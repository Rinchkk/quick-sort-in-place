class Participants:
    def __init__(self, login, score, penalty):
        self.login = login
        self.score = int(score)
        self.penalty = int(penalty)

    def comparison(obj1, obj2):
        if obj1.score > obj2.score or obj1.score == obj2.score and (obj1.penalty < obj2.penalty or obj1.penalty == obj2.penalty and obj1.login < obj2.login):
            return 1
        return 0

def create_heap(arr, size, i):
    node_idx = i
    left = 2 * i + 1
    right = 2 * i + 2

    if left < size and arr[node_idx].comparison(arr[left]):
        node_idx = left
    if right < size and arr[node_idx].comparison(arr[right]):
        node_idx = right
    if node_idx != i:
        arr[i], arr[node_idx] = arr[node_idx], arr[i]
        create_heap(arr, size, node_idx)

def heapsort(heap, heap_size):
    for i in range(heap_size, -1, -1):
        create_heap(heap, heap_size, i)
    for i in range(heap_size - 1, 0, -1):
        heap[0], heap[i] = heap[i], heap[0]
        create_heap(heap, i, 0)

def main():
    n = int(input())
    arr = []
    for i in range(n):
        login, completed_task, penalty = input().split()
        objects = Participants(login, completed_task, penalty)
        arr.append(objects)

    heapsort(arr, n)

    for i in range(n):
        print(arr[i].login)

if __name__ == '__main__':
    main()
